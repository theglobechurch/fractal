@import url('https://fonts.googleapis.com/css?family=Josefin+Sans:400,400i,700,700i');

$font-family: (
  text: ('Josefin Sans', sans-serif)
);

$font-size: (
  0: 12,
  1: 13,
  2: 14,
  3: 16,
  4: 18,
  5: 24,
  6: 32,
  7: 38,
  8: 46,
  9: 58
);

$line-height: (
  0: 16,
  1: 20,
  2: 24,
  3: 32,
  4: 44,
  5: 48,
  6: 56,
  7: 60,
  8: 72
);

$letter-spacing: (
  0: normal,
  1: 1,
  2: 2.5,
  3: 3,
  4: 5,
  5: 8
);

$font-weight: (
  light: 300,
  regular: 400,
  semi-bold: 600,
  bold: 700
);

$base-font-size: 3;
$base-letter-spacing: 0;
$base-font-weight: 'regular';

@function fontFamily($type: text) {
  @return map-get($font-family, $type);
}

@function fontSize($size: $base-font-size) {
  @return map-get($font-size, $size);
}

@function fontWeight($w: $base-font-weight) {
  @return map-get($font-weight, $w);
}

@function letterSpace($size: $base-font-size, $w: $base-font-weight) {
  @if $w == 'bold' {

    @if $size < 2 {
      @return map-get($letter-spacing, 2);
    } @else if $size < 4 {
      @return map-get($letter-spacing, 3);
    } @else {
      @return map-get($letter-spacing, 5);
    }

  } @else if $w == 'semi-bold' {
    @return map-get($letter-spacing, 3);
  }
  @return map-get($letter-spacing, 0);
}

@function lineHeight($size: $base-font-size, $weight: $base-font-weight) {

  @if $weight == "light" {
    @if $size == 5 {
      @return map-get($line-height, 4);
    }

    @if $size == 7 {
      @return map-get($line-height, 6);
    }
  }

  @if $size < 2 {
    @return map-get($line-height, 0);
  } @else if $size < 3 {
    @return map-get($line-height, 1);
  } @else if $size < 4 {
    @return map-get($line-height, 2);
  } @else if $size < 6 {
    @return map-get($line-height, 3);
  } @else if $size < 8  {
    @return map-get($line-height, 5);
  } @else if $size < 9 {
    @return map-get($line-height, 7);
  } @else {
    @return map-get($line-height, 8);
  }
}

@mixin fontSize($sizeValue: $base-font-size) {
  font-size: fontSize($sizeValue) + px; // Old browser fallback
  font-size: (fontSize($sizeValue) / fontSize($base-font-size)) + rem; // Base fontsize is 16px
}

@mixin lineHeight($heightValue: $base-font-size, $weight: $base-font-weight) {
  line-height: lineHeight($heightValue, $weight) + px; // Old browser fallback
  line-height: (lineHeight($heightValue, $weight) / fontSize($base-font-size)) + rem;
}

@mixin letterSpacing($size: $base-font-size, $weight: $base-font-weight) {
  letter-spacing: letterSpace($size, $weight) + px;
  letter-spacing: (letterSpace($size, $weight) / fontSize($base-font-size)) + rem;
}

@mixin typeSetting($size: $base-font-size, $weight: $base-font-weight, $transform: none) {
  @include fontSize($size);
  @include lineHeight($size, $weight);
  font-weight: fontWeight($weight);

  @if $transform == 'uppercase' and $weight != 'regular' and $weight != 'semi-light' {
    @include letterSpacing($size, $weight);
    text-transform: uppercase;
  }
}
